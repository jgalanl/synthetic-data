from sklearn.metrics import precision_recall_curve, auc
def pr_auc_Metric(y_true, y_pred):

    # print('y_true = ')
    # print(y_true)
    # print('y_pred = ')
    # print(y_pred)

    precision, recall, _ = precision_recall_curve(y_true, y_pred)
    score = auc(recall, precision) # Compute the area under the PR curve (AUC)
    #scale = score.shape[0]
    #normalized_score = - score.sum() / scale
    return score

ag_pr_auc_scorer = make_scorer(name='pr_auc',
                                  score_func=pr_auc_Metric,
                                  optimum=1,
                                  greater_is_better=True,
                                  needs_proba=True)   # elegir opci√≥n: [needs_pred, needs_proba, needs_class, needs_threshold, needs_quantile].


EVAL_METRIC = ag_pr_auc_scorer



configAutogluon  = {
                    'auto_stack': False,
                    'Config_model_path': Config_model_path,
                    'eval_metric' : EVAL_METRIC,
                    'sample_weight':SAMPLE_WEIGHT,
                    'verbosity' : VERBOSITY,
                    'timeLimit': timeLimit,
                    'num_stack_levels': 0, #1
                    'num_bag_folds': 0, #5,
                    'num_cpus': 24,  # hay 24
                    'num_gpus': 1,   #
                    # 'hyperparameters': {
                    #            'GBM': [{'extra_trees': True, 'ag_args': {'name_suffix': 'XT'}},{}],
                    #            #'RF': {},
                    #            #'XT': [{'criterion': 'entropy', 'ag_args': {'name_suffix': 'Entr'}}, # ExtraTrees con Entropy
                    #            #       {'criterion': 'gini', 'ag_args': {'name_suffix': 'Gini'}} ],      # ExtraTrees con Gini
                    #            #'CAT': {},
                    #           }
                    'presets': presets,
                    'hyperparameters' : {
                        'GBM': [
                        {'extra_trees': True, 'feature_fraction': 0.5143401489640409, 'learning_rate': 0.00529479887023554, 'min_data_in_leaf': 6, 'num_leaves': 133, 'ag_args': {'name_suffix': '_r196', 'priority': -31}},
                        {'extra_trees': True, 'feature_fraction': 0.9773131270704629, 'learning_rate': 0.010534290864227067, 'min_data_in_leaf': 21, 'num_leaves': 111, 'ag_args': {'name_suffix': '_r30', 'priority': -56}},
                        {'extra_trees': True,  'feature_fraction': 0.4341088458599442, 'learning_rate': 0.04034449862560467,  'min_data_in_leaf': 33, 'num_leaves': 16, 'ag_args': {'name_suffix': '_r94', 'priority': -48}},
                        #{'extra_trees': True, 'ag_args': {'name_suffix': 'XT'}},
                            ],
                        'CAT': [ #{},
                                {'depth': 4, 'grow_policy': 'SymmetricTree', 'l2_leaf_reg': 3.353268454214423, 'learning_rate': 0.06028218319511302, 'max_ctr_complexity': 1, 'one_hot_max_size': 10, 'ag_args': {'name_suffix': '_r49', 'priority': -42}}
                            ],

                        'XT': [
                        {'criterion': 'gini', 'ag_args': {'name_suffix': 'Gini', 'problem_types': ['binary', 'multiclass']}},
                        {'criterion': 'entropy', 'ag_args': {'name_suffix': 'Entr', 'problem_types': ['binary', 'multiclass']}},
                        #{'max_features': 'sqrt', 'max_leaf_nodes': 28532, 'min_samples_leaf': 1, 'ag_args': {'name_suffix': '_r49', 'priority': -43}},
                        #{'max_features': 'sqrt', 'max_leaf_nodes': 29702, 'min_samples_leaf': 2, 'ag_args': {'name_suffix': '_r126', 'priority': -86}},
                           ],
                        #'XGB': [#{},
                        #        {'colsample_bytree': 0.516652313273348, 'enable_categorical': True, 'learning_rate': 0.007158072983547058, 'max_depth': 9, 'min_child_weight': 0.8567068904025429, 'ag_args': {'name_suffix': '_r98', 'priority': -36}},
                        #        {'colsample_bytree': 0.7506621909633511, 'enable_categorical': False, 'learning_rate': 0.009974712407899168, 'max_depth': 4, 'min_child_weight': 0.9238550485581797, 'ag_args': {'name_suffix': '_r31', 'priority': -64}},
                        #    ]

                     }
                    }

